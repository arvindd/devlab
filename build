#!/bin/bash
#
# Builds the docker file creating the base image of devlab
#
# Usage:
#
# build [-n] [-l <lang>] [-v <version>]
#
# Where:
# -n - Disables caching during build [Default: Cache is used]
# -l <lang> - devlab for a language <lang> is built.
#             Note that build uses lang/df<lang> as dockerfile for this language.
#             Default: No language, and base devlab is built with dockerfile dfbase.
#
# Author: arvindd
# Created: 21.Apr.2021
#
# Copyright (c) 2021 Arvind Devarajan
# Licensed to you under the MIT License.
# See the LICENSE file in the project root for more information.
#

# First, collect all options
while getopts "nl:" opt; do
    case ${opt} in
        l)
            lang=${OPTARG}
            ;;
        n)  
            cache="--no-cache"
            ;;
        *)
            echo "Usage: `echo $0 | sed 's/\.\///'` [-n] [-l <lang>] [command]"
            exit -1
            ;;
    esac
done
shift $(expr $OPTIND - 1 )

# Fix all default arguments
lang=${lang:=base}
cacheopt=${cache:=}

# Build parameters
REPONAME=ramdootin/devlab
LANG=$lang
CACHEOPT=$cacheopt

# Run parameters
JPYPORT=9000

# Adjust the image name and the dockerfile based on the language chosen
if [[ $LANG == "base" ]]; then
    IMGNAME=${REPONAME}  # For base devlab, we'll keep the image name simple
    DOCKERFILE=dfbase
else
    IMGNAME="${REPONAME}-${LANG}"
    DOCKERFILE=lang/df$LANG
fi

# Calculate the build version based on git tag:
# If the latest commit has a tag, use that as the version of the docker image
# If the latest commit has no tag, then, there is no version for the image: it just gets "latest" as the default version.
lasttag=`git describe --abbrev=0 --tags`
lastcommit=`git describe --tags`
if [[ "$lasttag" == "$lastcommit" ]]
then
    # Our commit has a tag; so use that as the version
    VERSION=${lasttag}
fi

VERSION=${VERSION:=latest}

echo "Build parameters:"
echo "Dockerfile: ${DOCKERFILE}"
echo "Repo name: ${REPONAME}"
echo "Language: ${LANG}"
echo "Language version: ${VERSION}"
echo "Using cache:" $([ -z "${CACHEOPT}" ] && echo "Yes" || echo "No")

docker build -f ${DOCKERFILE} ${CACHEOPT} --tag ${IMGNAME}:${VERSION}  --build-arg JPYPORT=${JPYPORT} --build-arg LANG=${LANG} .

# If we built a docker with a tag, then also tag the same as the "latest" image
if [[ "$VERSION" != "latest" ]]; then
    docker tag ${IMGNAME}:${VERSION} "${IMGNAME}:latest"
fi