#!/bin/zsh
#
# Entrypoint for the devlab container.
#
# The main purpose for this script is to execute any commands
# before we execute the actual command passed to us.
#
# The script takes one or more parameters, the first of which is
# the command to be executed, and the rest of them are the commands
# for that script.
# 
# Copyright (c) 2021 Arvind Devarajan
# Licensed to you under the MIT License.
# See the LICENSE file in the project root for more information.
#

set -e

# Make sure to clear all config files before adding 
# default configuration in them
cat /dev/null > ~/.envrc
cat /dev/null > ~/.wgetrc
cat /dev/null > ~/.curlrc

# If we have mounted a /opt/certs directory, then, we
# have some certificates to be installed.
# our trust stores.
if [[ -d /opt/certs ]]; then
    # First, update the trusted certificate store
    sudo zsh -c "cp /opt/certs/* /etc/pki/trust/anchors"
    sudo zsh -c "update-ca-certificates"

    # # Now, add this directory as trusted CA store for both
    # # wget and curl. This helps in their use without a problem.
    # echo "ca_directory=/opt/certs" >> ~/.wgetrc
    # sudo zsh -c 'echo "ca_directory=/opt/certs" >> /root/.wgetrc'
    # echo "capath=/opt/certs" >> ~/.curlrc
    # sudo zsh -c 'echo "capath=/opt/certs" >> /root/.curlrc'    
fi 

# If we have http_proxy variables, add this information in
# all the utility config files
if [[ -n "$HTTP_PROXY" ]]; then
    http=$HTTP_PROXY
elif [[ -n "$http_proxy" ]]; then
    http=$http_proxy
fi

# Same with https variables...
if [[ -n "$HTTPS_PROXY" ]]; then
    https=$HTTPS_PROXY
elif [[ -n "$https_proxy" ]]; then
    https=$https_proxy
fi

# Make sure to define all proxy environment variables
if [[ -n "$http" || -n "$https" ]]; then
    # General environment variables with proxy
    echo "export http_proxy=$http" >> ~/.envrc
    echo "export https_proxy=$https" >> ~/.envrc
    echo "export no_proxy=localhost,127.0.0.1" >> ~/.envrc    
    echo "export HTTP_PROXY=$http" >> ~/.envrc
    echo "export HTTPS_PROXY=$https" >> ~/.envrc
    echo "export NO_PROXY=localhost,127.0.0.1" >> ~/.envrc    

    # Proxy configurations for wget and curl
    echo "use_proxy=on" >> ~/.wgetrc
    echo "http_proxy=$http_proxy" >> ~/.wgetrc
    echo "https_proxy=$https_proxy" >> ~/.wgetrc
    echo "proxy=$http_proxy" >> ~/.curlrc

    # Copy all of these in root's home too
    sudo zsh -c "cp .envrc .wgetrc .curlrc /root/"

    # Finally, adjust the proxy variables for system-wide proxy
    # usage. Some of the tools like curl like to use that
    sudo zsh -c "sed -i 's@^PROXY_ENABLED=.*@PROXY_ENABLED=\"yes\"@' /etc/sysconfig/proxy"
    sudo zsh -c "sed -i 's@^HTTP_PROXY=.*@HTTP_PROXY=\"$http\"@' /etc/sysconfig/proxy"    
    sudo zsh -c "sed -i 's@^HTTPS_PROXY=.*@HTTPS_PROXY=\"$https\"@' /etc/sysconfig/proxy"        
    sudo zsh -c "sed -i 's@^NO_PROXY=.*@NO_PROXY=\"localhost, 127.0.0.1\"@' /etc/sysconfig/proxy"            
fi

# Change to work directory and execute the command line
cd work && exec env "$@"
